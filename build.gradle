apply plugin: "java"
apply plugin: "eclipse"

repositories {
	mavenCentral()
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

group = 'com.github.arucard21.simplyrestful'
version = '0.7'

ext {
	jaxrs = "2.1.1"
	cxf = "3.2.6"
	junit = "5.3.1"
	mockito = "2.22.0"
}

subprojects{
	apply plugin: "java"
	apply plugin: "eclipse"
	apply plugin: 'maven'
	apply plugin: 'signing'
	
	repositories {
		mavenCentral()
	}

	test {
		useJUnitPlatform()
	}
	
	sourceSets {
		integrationTest {
			java {
				compileClasspath += main.output + test.output
				runtimeClasspath += main.output + test.output
			}
		}
	}
	
	configurations {
		integrationTestCompile.extendsFrom testCompile
		integrationTestRuntime.extendsFrom testRuntime
	}
	
	task integrationTest(type:Test){
		useJUnitPlatform()
		testClassesDir = project.sourceSets.integrationTest.output.classesDir
		classpath = project.sourceSets.integrationTest.runtimeClasspath
	}
	
	eclipse {
		classpath {
			plusConfigurations += [configurations.integrationTestCompile]
		}
	}
}

project(":SimplyRESTful"){
	project.description = "A framework for creating a RESTful API"
	dependencies {
		compile ("javax.inject:javax.inject:1")
		compile ("javax.ws.rs:javax.ws.rs-api:${jaxrs}")
		compile ("javax.validation:validation-api:2.0.1.Final")
		compile ("io.openapitools.jackson.dataformat:jackson-dataformat-hal:1.0.4")
		compile ("io.swagger:swagger-annotations:1.5.21")
	
		testCompile ("org.mockito:mockito-core:${mockito}")
		testCompile ("org.mockito:mockito-junit-jupiter:${mockito}")
		testCompile ("org.junit.jupiter:junit-jupiter-api:${junit}")
		testCompile ("org.junit.jupiter:junit-jupiter-engine:${junit}")
		testCompile ("org.junit.platform:junit-platform-launcher:1.3.1")
		testCompile ("org.glassfish.jersey.containers:jersey-container-servlet:2.27")
		
		integrationTestCompile ("org.apache.cxf:cxf-rt-transports-local:${cxf}")
		integrationTestCompile ("org.apache.cxf:cxf-rt-frontend-jaxrs:${cxf}")
		integrationTestCompile ("org.apache.cxf:cxf-rt-rs-client:${cxf}")
	}
}

project(":SimplyRESTful-spring-boot"){
	project.description = "Easily deploy your SimplyRESTful API with Spring Boot and a JAX-RS framework of your choice"
	dependencies {
		compileOnly ("org.springframework.boot:spring-boot:2.0.5.RELEASE")
		compile ("org.webjars:swagger-ui:2.2.6")
		compile ("io.openapitools.jackson.dataformat:jackson-dataformat-hal:1.0.4")
	}
}


project(":SimplyRESTful-cxf-spring-boot"){
	project.description = "Easily deploy your SimplyRESTful API using Apache CXF with Spring Boot"
	dependencies {
		compile project(':SimplyRESTful-spring-boot')
		compile ("org.apache.cxf:cxf-spring-boot-starter-jaxrs:${cxf}")
		compile ("org.apache.cxf:cxf-rt-rs-service-description-swagger:${cxf}")
		compile ("org.apache.cxf:cxf-rt-rs-extension-search:${cxf}")
	}
}

project(":SimplyRESTful-cxf"){
	project.description = "Easily deploy your SimplyRESTful API using Apache CXF"
	dependencies {
		compile project(':SimplyRESTful')
		compile ("org.apache.cxf:cxf-rt-frontend-jaxrs:${cxf}")
		compile ("org.apache.cxf:cxf-rt-rs-service-description-swagger:${cxf}")
		compile ("org.apache.cxf:cxf-rt-rs-extension-search:${cxf}")
		compile ("org.webjars:swagger-ui:2.2.6")
		compile ("ch.qos.logback:logback-classic:1.2.1")
		compile ("org.hibernate:hibernate-validator:5.4.0.Final")
		compile ("org.glassfish:javax.el:3.0.1-b08")
		compile ("io.openapitools.jackson.dataformat:jackson-dataformat-hal:1.0.4")
	}
}

project(":SimplyRESTful-example:cxf-spring-boot"){
	project.description = "Example project for a SimplyRESTful API using Apache CXF with Spring Boot"
	dependencies {
		compile project(':SimplyRESTful')
		compile project(':SimplyRESTful-cxf-spring-boot')
		compile project(':SimplyRESTful-example:datastore')
	}
}

project(":SimplyRESTful-example:jetty"){
	project.description = "Example project for a SimplyRESTful API using Apache CXF on Jetty"
	dependencies {
		compile project(':SimplyRESTful')
		compile project(':SimplyRESTful-cxf')
		compile project(':SimplyRESTful-example:datastore')
		compile ("org.apache.cxf:cxf-rt-transports-http-jetty:${cxf}")
	}
}

project(":SimplyRESTful-example:jersey-spring-boot"){
	project.description = "Easily deploy your SimplyRESTful API using Jersey with Spring Boot"
	dependencies {
		compile project(':SimplyRESTful')
		compile project(':SimplyRESTful-example:datastore')
		compile ("org.springframework.boot:spring-boot-starter-jersey:2.0.5.RELEASE"){
			exclude group: "org.glassfish.jersey.media", module: "jersey-media-json-jackson"
		}
		compile "io.swagger:swagger-jersey2-jaxrs:1.5.21"
	}
}

// Provide tasks to publish projects to Maven Central
configure(subprojects - project(":SimplyRESTful-example").allprojects){
	javadoc {
		options.addBooleanOption('html5', true)
	}

	task javadocJar(type: Jar) {
		classifier = 'javadoc'
		from javadoc
	}

	task sourcesJar(type: Jar) {
		classifier = 'sources'
		from sourceSets.main.allSource
	}

	artifacts {
		archives javadocJar, sourcesJar
	}

	signing {
		sign configurations.archives
	}

	uploadArchives {
		repositories {
			mavenDeployer {
				beforeDeployment { MavenDeployment deployment ->
					signing.signPom(deployment)
				}

				repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
					authentication(userName: ossrhUsername, password: ossrhPassword)
				}

				snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
					authentication(userName: ossrhUsername, password: ossrhPassword)
				}

				pom.project {
					name project.name
					packaging 'jar'

					description project.description
					url = 'https://github.com/arucard21/SimplyRESTful'

					scm {
						connection 'scm:git:git://github.com:arucard21/SimplyRESTful.git'
						developerConnection 'scm:git:ssh://github.com:arucard21/SimplyRESTful.git'
						url 'https://github.com/arucard21/SimplyRESTful'
					}

					licenses {
						license {
							name 'GNU Lesser General Public License'
							url 'https://www.gnu.org/licenses/lgpl-3.0.txt'
						}
					}

					developers {
						developer {
							name 'Riaas Mokiem'
							email 'arucard21@gmail.com'
							organizationUrl 'https://github.com/arucard21'
						}
					}
				}
			}
		}
	}
}
