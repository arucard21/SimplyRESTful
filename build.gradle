plugins{
    id "org.springframework.boot" apply false
    id "com.github.ben-manes.versions"
}

//Shared configuration for all projects (root, library and example projects) including ones with a custom build.gradle
configure(allprojects){
    group = 'com.github.arucard21.simplyrestful'
    version = '0.15.0'
}

//Shared configuration for all projects (root, library and example projects) except ones with a custom build.gradle
configure(allprojects - project(":client")){
	apply plugin: "java"
	apply plugin: "eclipse"

	repositories {
		mavenCentral()
	}

	sourceCompatibility = JavaVersion.VERSION_11
	targetCompatibility = JavaVersion.VERSION_11

	test {
		useJUnitPlatform()
	}
	
	sourceSets {
		integrationTest {
			java {
				compileClasspath += main.output + test.output
				runtimeClasspath += main.output + test.output
			}
		}
	}
	
	configurations {
		integrationTestImplementation.extendsFrom testImplementation
		integrationTestRuntime.extendsFrom testRuntime
	}
	
	task integrationTest(type:Test){
		useJUnitPlatform()
		setTestClassesDirs(project.sourceSets.integrationTest.output.classesDirs)
		classpath = project.sourceSets.integrationTest.runtimeClasspath
	}
	
	eclipse {
		classpath {
			plusConfigurations += [configurations.integrationTestRuntimeClasspath]
		}
	}
}

// Shared configuration for all library projects (excluding root and example projects)
configure(subprojects - project(":examples").allprojects){
	apply plugin: 'java-library'
	apply plugin: 'maven-publish'
	apply plugin: 'signing'
	
	java {
    	withJavadocJar()
    	withSourcesJar()
	}
	
	publishing{
		publications{
			mavenJava(MavenPublication){
				from components.java
				afterEvaluate {
					pom {
						name = project.name
						packaging = 'jar'
						description = project.description
						url = 'https://github.com/arucard21/SimplyRESTful-Framework'
	
						scm {
							connection = 'scm:git:git://github.com:arucard21/SimplyRESTful-Framework.git'
							developerConnection = 'scm:git:ssh://github.com:arucard21/SimplyRESTful-Framework.git'
							url = 'https://github.com/arucard21/SimplyRESTful-Framework'
						}
	
						developers {
							developer {
								name = 'Riaas Mokiem'
								email = 'arucard21@gmail.com'
                                organizationUrl = 'https://github.com/arucard21'
							}
						}
					}
				}
			}
		}
		
		repositories{
			maven{
				def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
            	def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
            	url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            	credentials {
            		username ossrhUsername
            		password ossrhPassword
        		}
			}
		}
	}
	
	signing {
		sign publishing.publications.mavenJava
	}
}

// Shared configuration for all example projects
configure(project(":examples").allprojects){
	apply plugin: 'application'
}
	
project(":SimplyRESTful-resources"){
	project.description = "The core API resources used in SimplyRESTful APIs"
	dependencies {
		api group: "io.openapitools.jackson.dataformat", name: "jackson-dataformat-hal", version: jacksonDataformatHalVersion
		api group: "io.openapitools.hal", name: "swagger-hal", version: swaggerHalVersion

		testImplementation group: "org.junit.jupiter", name: "junit-jupiter-api", version: junitVersion
		testImplementation group: "org.junit.jupiter", name: "junit-jupiter-engine", version: junitVersion
		testImplementation group: "org.junit.platform", name: "junit-platform-launcher", version: junitPlatformVersion
		testImplementation group: "org.glassfish.jersey.containers", name: "jersey-container-servlet", version: jerseyVersion
		testImplementation group: "nl.jqno.equalsverifier", name: "equalsverifier", version: equalsVerifierVersion
	}
	
	publishing{
		publications{
			mavenJava(MavenPublication){
				pom {
					licenses {
						license {
							name = 'GNU Lesser General Public License'
							url = 'https://www.gnu.org/licenses/lgpl-3.0.txt'
						}
					}
				}
			}
		}
	}
}

project(":jaxrs-providers"){
	project.description = "A collection of JAX-RS providers for use with SimplyRESTful server and client"
	dependencies {
		api group: "jakarta.ws.rs", name: "jakarta.ws.rs-api", version: jaxrsVersion
		api group: "io.openapitools.jackson.dataformat", name: "jackson-dataformat-hal", version: jacksonDataformatHalVersion
		api group: "jakarta.inject", name: "jakarta.inject-api", version: jakartaInjectVersion
	}
	
	publishing{
		publications{
			mavenJava(MavenPublication){
				pom {
					licenses {
						license {
							name = 'The Apache License, Version 2.0'
                        	url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    	}
					}
				}
			}
		}
	}
}

project(":SimplyRESTful"){
	project.description = "A framework for creating a RESTful API"
	dependencies {
		api project(":SimplyRESTful-resources")
		api project(":jaxrs-providers")
		api group: "jakarta.inject", name: "jakarta.inject-api", version: jakartaInjectVersion
		api group: "jakarta.ws.rs", name: "jakarta.ws.rs-api", version: jaxrsVersion
		api group: "jakarta.validation", name: "jakarta.validation-api", version: jakartaValidationVersion
		api group: "io.swagger.core.v3", name: "swagger-jaxrs2", version: swaggerVersion
		api group: "jakarta.servlet", name: "jakarta.servlet-api", version: jakartaServletVersion
		api group: "jakarta.json", name: "jakarta.json-api", version: jakartaJsonVersion

		testImplementation group: "org.mockito", name: "mockito-core", version: mockitoVersion
		testImplementation group: "org.mockito", name: "mockito-junit-jupiter", version: mockitoVersion
		testImplementation group: "org.junit.jupiter", name: "junit-jupiter-api", version: junitVersion
		testImplementation group: "org.junit.jupiter", name: "junit-jupiter-engine", version: junitVersion
		testImplementation group: "org.junit.platform", name: "junit-platform-launcher", version: junitPlatformVersion
		testImplementation group: "org.glassfish.jersey.containers", name: "jersey-container-servlet", version: jerseyVersion
		testImplementation group: "nl.jqno.equalsverifier", name: "equalsverifier", version: equalsVerifierVersion
		testImplementation group: "org.glassfish.jersey.media", name: "jersey-media-sse", version: jerseyVersion
		
		integrationTestImplementation group: "org.glassfish.jersey.test-framework", name: "jersey-test-framework-core", version: jerseyVersion
		integrationTestImplementation group: "org.glassfish.jersey.test-framework.providers", name: "jersey-test-framework-provider-jetty", version: jerseyVersion
		integrationTestImplementation group: "org.glassfish.jersey.inject", name: "jersey-hk2", version: jerseyVersion
		integrationTestImplementation group: "jakarta.xml.bind", name: "jakarta.xml.bind-api", version: jakartaXmlBindVersion
	}
	
	publishing{
		publications{
			mavenJava(MavenPublication){
				pom {
					licenses {
						license {
							name = 'GNU Lesser General Public License'
							url = 'https://www.gnu.org/licenses/lgpl-3.0.txt'
						}
					}
				}
			}
		}
	}
}

project(":deploy-springboot-cxf"){
	project.description = "Easily deploy your SimplyRESTful API using Apache CXF with Spring Boot"
	dependencies {
		api project(":SimplyRESTful")
		api group: "org.apache.cxf", name: "cxf-spring-boot-starter-jaxrs", version: cxfVersion
		api group: "org.apache.cxf", name: "cxf-rt-rs-service-description-openapi-v3", version: cxfVersion
		api group: "org.apache.cxf", name: "cxf-rt-rs-extension-search", version: cxfVersion
	}
	
	publishing{
		publications{
			mavenJava(MavenPublication){
				pom {
					licenses {
						license {
							name = 'The Apache License, Version 2.0'
                        	url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    	}
					}
				}
			}
		}
	}
}

project(":deploy-springboot-jersey"){
	project.description = "Easily deploy your SimplyRESTful API using Jersey with Spring Boot"
	dependencies {
		api project(':SimplyRESTful')
		api group: "org.springframework.boot", name: "spring-boot", version: springBootVersion
		api (group: "org.springframework.boot", name: "spring-boot-starter-jersey", version: springBootVersion) {
			exclude group: "org.glassfish.jersey.media", module: "jersey-media-json-jackson"
		}
		api group: "org.glassfish.jersey.media", name: "jersey-media-sse", version: jerseyVersion
		api group: "io.swagger.core.v3", name: "swagger-jaxrs2", version: swaggerVersion
	}
	
	publishing{
		publications{
			mavenJava(MavenPublication){
				pom {
					licenses {
						license {
							name = 'The Apache License, Version 2.0'
                        	url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    	}
					}
				}
			}
		}
	}
}

project(":deploy-jetty-cxf"){
	project.description = "Easily deploy your SimplyRESTful API using Apache CXF"
	dependencies {
		api project(':SimplyRESTful')
		api group: "org.apache.cxf", name: "cxf-rt-frontend-jaxrs", version: cxfVersion
		api group: "jakarta.xml.ws", name: "jakarta.xml.ws-api", version: jakartaXmlWsVersion
		api group: "org.apache.cxf", name: "cxf-rt-rs-service-description-openapi-v3", version: cxfVersion
		api group: "org.apache.cxf", name: "cxf-rt-rs-extension-search", version: cxfVersion
		api group: "ch.qos.logback", name: "logback-classic", version: logbackClassicVersion
		api group: "org.hibernate.validator", name: "hibernate-validator", version: hibernateValidatorVersion
		api group: "org.glassfish", name: "jakarta.el", version: jakartaElGlassfish
	}
	
	publishing{
		publications{
			mavenJava(MavenPublication){
				pom {
					licenses {
						license {
							name = 'The Apache License, Version 2.0'
                        	url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    	}
					}
				}
			}
		}
	}
}

project(":examples:jetty-cxf"){
	project.description = "Example project for a SimplyRESTful API using Apache CXF on Jetty"

	application{
		mainClassName = "example.jetty.ExampleCXFJettyServer"
	}

	dependencies {
		implementation project(':SimplyRESTful')
		implementation project(':deploy-jetty-cxf')
		implementation group: "org.apache.cxf", name: "cxf-rt-transports-http-jetty", version: cxfVersion
	}
}

project(":examples:springboot-cxf"){
	apply plugin: "org.springframework.boot"

	application{
		mainClassName = "example.springboot.ExampleCXFApplication"
	}

	project.description = "Example project for a SimplyRESTful API using Apache CXF with Spring Boot"
	dependencies {
		implementation project(':SimplyRESTful')
		implementation project(':deploy-springboot-cxf')
		implementation group: "jakarta.xml.ws", name: "jakarta.xml.ws-api", version: jakartaXmlWsVersion
	}
}
