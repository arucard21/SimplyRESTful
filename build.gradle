plugins{
	id "org.springframework.boot" version "2.3.4.RELEASE" apply false
}

ext {
	jaxrs = "2.1.6"
	cxf = "3.4.0"
	junit = "5.7.0"
	mockito = "3.5.11"
	spring = "2.3.4.RELEASE"
	jersey = "2.32"
	swagger = "2.1.4"
}

//Shared configuration for all projects (root, library and example projects)
allprojects{
	apply plugin: "java"
	apply plugin: "eclipse"

	repositories {
		mavenCentral()
	}

	group = 'com.github.arucard21.simplyrestful'
	version = '0.13.3'

	sourceCompatibility = JavaVersion.VERSION_11
	targetCompatibility = JavaVersion.VERSION_11

	test {
		useJUnitPlatform()
	}
	
	sourceSets {
		integrationTest {
			java {
				compileClasspath += main.output + test.output
				runtimeClasspath += main.output + test.output
			}
		}
	}
	
	configurations {
		integrationTestImplementation.extendsFrom testImplementation
		integrationTestRuntime.extendsFrom testRuntime
	}
	
	task integrationTest(type:Test){
		useJUnitPlatform()
		setTestClassesDirs(project.sourceSets.integrationTest.output.classesDirs)
		classpath = project.sourceSets.integrationTest.runtimeClasspath
	}
	
	eclipse {
		classpath {
			plusConfigurations += [configurations.integrationTestRuntimeClasspath]
		}
	}
}

// Shared configuration for all library projects (excluding root and example projects)
configure(subprojects - project(":examples").allprojects){
	apply plugin: 'java-library'
	apply plugin: 'maven-publish'
	apply plugin: 'signing'
	
	java {
    	withJavadocJar()
    	withSourcesJar()
	}
	
	publishing{
		publications{
			mavenJava(MavenPublication){
				from components.java
				afterEvaluate {
					pom {
						name = project.name
						packaging = 'jar'
						description = project.description
						url = 'https://github.com/arucard21/SimplyRESTful-Framework'
	
						scm {
							connection = 'scm:git:git://github.com:arucard21/SimplyRESTful-Framework.git'
							developerConnection = 'scm:git:ssh://github.com:arucard21/SimplyRESTful-Framework.git'
							url = 'https://github.com/arucard21/SimplyRESTful-Framework'
						}
	
						developers {
							developer {
								name = 'Riaas Mokiem'
								email = 'arucard21@gmail.com'
								organizationUrl = 'https://github.com/arucard21'
							}
						}
					}
				}
			}
		}
		
		repositories{
			maven{
				def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
            	def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
            	url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            	credentials {
            		username ossrhUsername
            		password ossrhPassword
        		}
			}
		}
	}
	
	signing {
		sign publishing.publications.mavenJava
	}
}

// Shared configuration for all example projects
configure(project(":examples").allprojects){
	apply plugin: 'application'
}
	
project(":SimplyRESTful-resources"){
	project.description = "The core API resources used in SimplyRESTful APIs"
	dependencies {
		api ("io.openapitools.jackson.dataformat:jackson-dataformat-hal:1.0.7")
		
		// FIXME needs to be upgraded (upstream) for use with OpenAPI 3.0
		//api ("io.openapitools.hal:swagger-hal:1.0.4"){
		//	exclude group: "javax.ws.rs"
		//	exclude group: "io.swagger"
		//}

		testImplementation ("org.junit.jupiter:junit-jupiter-api:${junit}")
		testImplementation ("org.junit.jupiter:junit-jupiter-engine:${junit}")
		testImplementation ("org.junit.platform:junit-platform-launcher:1.7.0")
		testImplementation ("org.glassfish.jersey.containers:jersey-container-servlet:${jersey}")
		testImplementation ("nl.jqno.equalsverifier:equalsverifier:3.4.3")
	}
	
	publishing{
		publications{
			mavenJava(MavenPublication){
				pom {
					licenses {
						license {
							name = 'GNU Lesser General Public License'
							url = 'https://www.gnu.org/licenses/lgpl-3.0.txt'
						}
					}
				}
			}
		}
	}
}

project(":jaxrs-providers"){
	project.description = "A collection of JAX-RS providers for use with SimplyRESTful server and client"
	dependencies {
		api ("jakarta.ws.rs:jakarta.ws.rs-api:${jaxrs}")
		api ("io.openapitools.jackson.dataformat:jackson-dataformat-hal:1.0.7")
		api ("jakarta.inject:jakarta.inject-api:2.0.0")
	}
	
	publishing{
		publications{
			mavenJava(MavenPublication){
				pom {
					licenses {
						license {
							name = 'The Apache License, Version 2.0'
                        	url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    	}
					}
				}
			}
		}
	}
}

project(":SimplyRESTful"){
	project.description = "A framework for creating a RESTful API"
	dependencies {
		api project(":SimplyRESTful-resources")
		api project(":jaxrs-providers")
		api ("jakarta.inject:jakarta.inject-api:2.0.0")
		api ("jakarta.ws.rs:jakarta.ws.rs-api:${jaxrs}")
		api ("jakarta.validation:jakarta.validation-api:2.0.2")
		api ("io.swagger.core.v3:swagger-jaxrs2:${swagger}")
		api ("jakarta.servlet:jakarta.servlet-api:5.0.0")

		testImplementation ("org.mockito:mockito-core:${mockito}")
		testImplementation ("org.mockito:mockito-junit-jupiter:${mockito}")
		testImplementation ("org.junit.jupiter:junit-jupiter-api:${junit}")
		testImplementation ("org.junit.jupiter:junit-jupiter-engine:${junit}")
		testImplementation ("org.junit.platform:junit-platform-launcher:1.7.0")
		testImplementation ("org.glassfish.jersey.containers:jersey-container-servlet:${jersey}")
		testImplementation ("nl.jqno.equalsverifier:equalsverifier:3.4.3")
		
		integrationTestImplementation("org.glassfish.jersey.test-framework:jersey-test-framework-core:${jersey}")
		integrationTestImplementation("org.glassfish.jersey.test-framework.providers:jersey-test-framework-provider-jetty:${jersey}")
		integrationTestImplementation ("org.glassfish.jersey.inject:jersey-hk2:${jersey}")
		integrationTestImplementation("jakarta.xml.bind:jakarta.xml.bind-api:2.3.3")
	}
	
	publishing{
		publications{
			mavenJava(MavenPublication){
				pom {
					licenses {
						license {
							name = 'GNU Lesser General Public License'
							url = 'https://www.gnu.org/licenses/lgpl-3.0.txt'
						}
					}
				}
			}
		}
	}
}

project(":client"){
	project.description = "A generic client that can be used with any SimplyRESTful API"
	dependencies {
		api project(":SimplyRESTful-resources")
		api project(":jaxrs-providers")
		api ("jakarta.json:jakarta.json-api:1.1.6")
		api ("org.glassfish.jersey.core:jersey-client:${jersey}")
		api ("io.swagger.core.v3:swagger-models:${swagger}")
		api ("io.swagger.parser.v3:swagger-parser:2.0.21")
		api ("org.glassfish.jersey.inject:jersey-hk2:${jersey}")
				
		integrationTestImplementation project(":SimplyRESTful")
		integrationTestImplementation("org.glassfish.jersey.test-framework:jersey-test-framework-core:${jersey}")
		integrationTestImplementation("org.glassfish.jersey.test-framework.providers:jersey-test-framework-provider-jetty:${jersey}")
		integrationTestImplementation ("org.glassfish.jersey.inject:jersey-hk2:${jersey}")
		integrationTestImplementation("jakarta.xml.bind:jakarta.xml.bind-api:2.3.3")
		integrationTestImplementation ("org.mockito:mockito-core:${mockito}")
		integrationTestImplementation ("org.mockito:mockito-junit-jupiter:${mockito}")
		integrationTestImplementation ("org.junit.jupiter:junit-jupiter-api:${junit}")
		integrationTestImplementation ("org.junit.jupiter:junit-jupiter-engine:${junit}")
		integrationTestImplementation ("org.junit.platform:junit-platform-launcher:1.7.0")
		integrationTestImplementation ("org.glassfish:jakarta.json:1.1.6")
		integrationTestImplementation ("io.swagger.core.v3:swagger-jaxrs2:${swagger}")
	}

	publishing{
		publications{
			mavenJava(MavenPublication){
				pom {
					licenses {
						license {
							name = 'GNU Lesser General Public License'
							url = 'https://www.gnu.org/licenses/lgpl-3.0.txt'
						}
					}
				}
			}
		}
	}
}

project(":deploy-springboot-cxf"){
	project.description = "Easily deploy your SimplyRESTful API using Apache CXF with Spring Boot"
	dependencies {
		api project(":SimplyRESTful")
		api ("org.apache.cxf:cxf-spring-boot-starter-jaxrs:${cxf}")
		api ("org.apache.cxf:cxf-rt-rs-service-description-openapi-v3:${cxf}")
		api ("org.apache.cxf:cxf-rt-rs-extension-search:${cxf}")
	}
	
	publishing{
		publications{
			mavenJava(MavenPublication){
				pom {
					licenses {
						license {
							name = 'The Apache License, Version 2.0'
                        	url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    	}
					}
				}
			}
		}
	}
}

project(":deploy-springboot-jersey"){
	project.description = "Easily deploy your SimplyRESTful API using Jersey with Spring Boot"
	dependencies {
		api project(':SimplyRESTful')
		api ("org.springframework.boot:spring-boot:${spring}")
		api ("org.springframework.boot:spring-boot-starter-jersey:${spring}"){
			exclude group: "org.glassfish.jersey.media", module: "jersey-media-json-jackson"
		}
		api ("org.glassfish.jersey.media:jersey-media-sse:${jersey}")
		api ("io.swagger.core.v3:swagger-jaxrs2:${swagger}")
	}
	
	publishing{
		publications{
			mavenJava(MavenPublication){
				pom {
					licenses {
						license {
							name = 'The Apache License, Version 2.0'
                        	url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    	}
					}
				}
			}
		}
	}
}

project(":deploy-jetty-cxf"){
	project.description = "Easily deploy your SimplyRESTful API using Apache CXF"
	dependencies {
		api project(':SimplyRESTful')
		api ("org.apache.cxf:cxf-rt-frontend-jaxrs:${cxf}")
		api ("jakarta.xml.ws:jakarta.xml.ws-api:2.3.3")
		api ("org.apache.cxf:cxf-rt-rs-service-description-openapi-v3:${cxf}")
		api ("org.apache.cxf:cxf-rt-rs-extension-search:${cxf}")
		api ("ch.qos.logback:logback-classic:1.2.3")
		api ("org.hibernate:hibernate-validator:6.1.5.Final")
		api ("org.glassfish:jakarta.el:3.0.3")
	}
	
	publishing{
		publications{
			mavenJava(MavenPublication){
				pom {
					licenses {
						license {
							name = 'The Apache License, Version 2.0'
                        	url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    	}
					}
				}
			}
		}
	}
}

project(":persist-springdata"){
	project.description = "Easily persist your SimplyRESTful API using Spring Data"
	dependencies {
		api ("com.github.arucard21.simplyrestful:SimplyRESTful:0.11.5")
		api ("org.springframework.boot:spring-boot-starter-data-jpa:2.2.4.RELEASE")
	}
	
	publishing{
		publications{
			mavenJava(MavenPublication){
				pom {
					licenses {
						license {
							name = 'GNU Lesser General Public License'
							url = 'https://www.gnu.org/licenses/lgpl-3.0.txt'
						}
					}
				}
			}
		}
	}
}

project(":examples:jetty-cxf"){
	project.description = "Example project for a SimplyRESTful API using Apache CXF on Jetty"

	application{
		mainClassName = "example.jetty.ExampleCXFJettyServer"
	}

	dependencies {
		implementation project(':SimplyRESTful')
		implementation project(':deploy-jetty-cxf')
		implementation ("org.apache.cxf:cxf-rt-transports-http-jetty:${cxf}")
	}
}

project(":examples:springboot-cxf"){
	apply plugin: "org.springframework.boot"

	application{
		mainClassName = "example.springboot.ExampleCXFApplication"
	}

	project.description = "Example project for a SimplyRESTful API using Apache CXF with Spring Boot"
	dependencies {
		implementation project(':SimplyRESTful')
		implementation project(':deploy-springboot-cxf')
		implementation("jakarta.xml.ws:jakarta.xml.ws-api:2.3.3")
	}
}

project(":examples:springboot-jersey-nomapping-springdata"){
	apply plugin: "org.springframework.boot"

	project.description = "Example project for a SimplyRESTful API using Jersey with Spring Boot and directly stored with Spring Data"

	application{
		mainClassName = "example.jersey.nomapping.JerseyNoMappingApplication"
	}

	dependencies {
		implementation project(':SimplyRESTful')
		implementation project(':deploy-springboot-jersey')
		implementation ("org.springframework.boot:spring-boot-starter-data-jpa:${spring}")
		implementation("org.springframework.boot:spring-boot-starter-validation:${spring}")
		implementation("org.springframework.boot:spring-boot-starter-actuator:${spring}")
		implementation ("com.h2database:h2:1.4.200")
		implementation("io.github.perplexhub:rsql-jpa-specification:5.0.6")
	}
}
